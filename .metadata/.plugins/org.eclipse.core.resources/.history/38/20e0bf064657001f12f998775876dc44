package com.ejemplo_uno.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration;
import org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@EnableWebSecurity
public class EjemploConfig extends WebSecurityConfiguration{
	
//	public SecurityFilterChain configure(HttpSecurity http) throws Exception {
//        http
//                .csrf(csrf -> csrf.disable())
//                .authorizeHttpRequests(authz -> authz
//                                .requestMatchers("/api/public/**").permitAll() //Rutas publicas
//                                .anyRequest().authenticated() //Todas las demas rutas requieren Autorizacion
//                )
//                .httpBasic(AbstractHttpConfigurer::disable) //Nueva forma de configurar la autenticacion b√°sica
//                
//                .build();
//        
//        return http.build();
//		
//	}

	
	@Bean
	public SecurityFilterChain configured(HttpSecurity http) throws Exception {
		
	}
}
